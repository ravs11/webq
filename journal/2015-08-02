TokenGen fails while running for long duration

Debug result: event function issue

Issues resolved:
    1) copying of queue was not according to the length of queue send
    2) Reserve a minimum capacity for all peers in the form of avg_wait time
    if the peer avg wait time is zero
    3) Share if computed as zero using the peer_avg_wait_time and 
    host_avg_wait time , then set it to 1

Change of Algorithm:

The algorithm deciding weather to admit a request or not is changed:

                    Earlier:
                ===============

(host)average_wait_time
and
peer_average_wait_time is precomputed.
From the queues received from the peers the net capacity used is found
and the remaining capacity is divided in proportion to peer average wait time.
Pitfalls:
--------
    A TokenGen already using a majority share is still allocated 
    further capacity.eg:
    consider a scenario with 2 peers . (1) used 27 and (2) uses 0 when total capacity 
    is 40. Ideally (1) shouldnt be allocated any more capacity and all the 
    remaining capacity should go to (2)

                        Now
                    ==========

concept of reserving capacity
(host)average_wait_time
and
peer_average_wait_time is precomputed.
if any of the above is zero , it is assigned a valued proportional to reserve percentage
The share of the current tokengen is calculated .( in the ratio of average_wait_time
and peer_avg_wait_time ). if the share is above the capacity used by the 
current token gen then only the request is allowed.

Main differences:
Earlier the usage in peers is taken into account , now only peer average
wait time is considered. ( reduced computational complexity , more accurate )


todo
----

Generate test graphs
Test with 3 token gens
test in the boundary of 1000
